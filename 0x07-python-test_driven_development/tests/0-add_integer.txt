The "add_integer" module
====================

Using "add_integer"
-------------------

Test file for the function add_integer. First import "add_integer" from "add_integer" module:

     >>> add_integer = __import__('0-add_integer').add_integer

Now use this:

    >>> add_integer(1)
    99

    >>> add_integer(4, 5)
    9

    >>> add_integer("a", 6)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(-1, "b")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    >>> add_integer(100.4, 5)
    105

    >>> add_integer(10+5j)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer((10, 5), 6)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

    >>> add_integer(1, 2, 3)
    Traceback (most recent call last):
    ...
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer
