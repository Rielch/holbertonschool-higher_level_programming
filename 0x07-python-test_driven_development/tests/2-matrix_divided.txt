The "matrix_divided" module
===========================

Using "matrix_divided"
----------------------

Test file for the function matrix_divided. First import matrix_divided from the 2-matrix_divided module:

     >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use this:

    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

    >>> matrix_divided([[2, 4, 8], [6, 12, 14]], 2)
    [[1.0, 2.0, 4.0], [3.0, 6.0, 7.0]]

    >>> matrix_divided([2, 4, 8], 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[]], 2)
    [[]]

    >>> matrix_divided([[2, 4], [5, 10, 15]], 4)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([["hello", "holberton"], [2, 4]], 5)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[2, 4], [2, 4]], "div")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

    >>> matrix_divided([[2], [4]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

    >>> matrix_divided([[2], [4]], [[6], [8]], 0)
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() takes 2 positional arguments but 3 were given

    >>> matrix_divided([[], []], 2)
    [[], []]
